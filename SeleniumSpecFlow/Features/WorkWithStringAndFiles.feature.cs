// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.3.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SeleniumSpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class WorkWithStringAndFilesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "WorkWithStringAndFiles.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "WorkWithStringAndFiles", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "WorkWithStringAndFiles")))
            {
                global::SeleniumSpecFlow.Features.WorkWithStringAndFilesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void WorkWithFiles(string iD, string startDate, string endDate, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ID", iD);
            argumentsOfScenario.Add("StartDate", startDate);
            argumentsOfScenario.Add("EndDate", endDate);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Work with files", null, tagsOfScenario, argumentsOfScenario);
#line 3
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
 testRunner.When("Work with files", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "StartDate",
                            "EndDate"});
                table4.AddRow(new string[] {
                            "-2",
                            "-1"});
#line 5
 testRunner.When("Work with XML files", ((string)(null)), table4, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with files: XML_File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "XML_File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "XML_File")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:StartDate", "-2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:EndDate", "-1")]
        public virtual void WorkWithFiles_XML_File()
        {
#line 3
this.WorkWithFiles("XML_File", "-2", "-1", ((string[])(null)));
#line hidden
        }
        
        public virtual void WorkWithString(string iD, string string1, string string2, string filePath, string writeFilePath, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ID", iD);
            argumentsOfScenario.Add("String1", string1);
            argumentsOfScenario.Add("String2", string2);
            argumentsOfScenario.Add("FilePath", filePath);
            argumentsOfScenario.Add("WriteFilePath", writeFilePath);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Work with String", null, tagsOfScenario, argumentsOfScenario);
#line 13
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 15
 testRunner.When(string.Format("I Count Rows with String \"{0}\" in File \"{1}\" and write into \"{2}\" file", string1, filePath, writeFilePath), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN17 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN17 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN17 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN17 User Story Closure.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN17 User Story Closure_Result.csv")]
        public virtual void WorkWithString_CLN17UserStoryClosure()
        {
#line 13
this.WorkWithString("CLN17 User Story Closure", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN17 User Story Closure.csv", "C:\\_TestProject\\Data\\CLN17 User Story Closure_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN17 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN17 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN17 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN17 Formal Verification.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN17 Formal Verification_Result.csv")]
        public virtual void WorkWithString_CLN17FormalVerification()
        {
#line 13
this.WorkWithString("CLN17 Formal Verification", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN17 Formal Verification.csv", "C:\\_TestProject\\Data\\CLN17 Formal Verification_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN16 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN16 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN16 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN16 User Story Closure.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN16 User Story Closure_Result.csv")]
        public virtual void WorkWithString_CLN16UserStoryClosure()
        {
#line 13
this.WorkWithString("CLN16 User Story Closure", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN16 User Story Closure.csv", "C:\\_TestProject\\Data\\CLN16 User Story Closure_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN16 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN16 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN16 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN16 Formal Verification.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN16 Formal Verification_Result.csv")]
        public virtual void WorkWithString_CLN16FormalVerification()
        {
#line 13
this.WorkWithString("CLN16 Formal Verification", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN16 Formal Verification.csv", "C:\\_TestProject\\Data\\CLN16 Formal Verification_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN17 Formal Test Execution_THF2a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN17 Formal Test Execution_THF2a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN17 Formal Test Execution_THF2a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN17 Formal Test Execution_THF2a.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN17 Formal Test Execution_THF2a_Result.csv")]
        public virtual void WorkWithString_CLN17FormalTestExecution_THF2A()
        {
#line 13
this.WorkWithString("CLN17 Formal Test Execution_THF2a", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN17 Formal Test Execution_THF2a.csv", "C:\\_TestProject\\Data\\CLN17 Formal Test Execution_THF2a_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN16.8 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN16.8 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN16.8 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN16.8 User Story Closure.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN16.8 User Story Closure_Result.csv")]
        public virtual void WorkWithString_CLN16_8UserStoryClosure()
        {
#line 13
this.WorkWithString("CLN16.8 User Story Closure", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN16.8 User Story Closure.csv", "C:\\_TestProject\\Data\\CLN16.8 User Story Closure_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN16.5 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN16.5 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN16.5 User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN16.5 User Story Closure.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN16.5 User Story Closure_Result.csv")]
        public virtual void WorkWithString_CLN16_5UserStoryClosure()
        {
#line 13
this.WorkWithString("CLN16.5 User Story Closure", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN16.5 User Story Closure.csv", "C:\\_TestProject\\Data\\CLN16.5 User Story Closure_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN16.5 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN16.5 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN16.5 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN16.5 Formal Verification.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN16.5 Formal Verification_Result.csv")]
        public virtual void WorkWithString_CLN16_5FormalVerification()
        {
#line 13
this.WorkWithString("CLN16.5 Formal Verification", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN16.5 Formal Verification.csv", "C:\\_TestProject\\Data\\CLN16.5 Formal Verification_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN15.1 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN15.1 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN15.1 Formal Verification")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN15.1 Formal Verification.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN15.1 Formal Verification_Result.csv")]
        public virtual void WorkWithString_CLN15_1FormalVerification()
        {
#line 13
this.WorkWithString("CLN15.1 Formal Verification", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN15.1 Formal Verification.csv", "C:\\_TestProject\\Data\\CLN15.1 Formal Verification_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: CLN15.1 - User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "CLN15.1 - User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "CLN15.1 - User Story Closure")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "System.OutOfMemoryException")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\CLN15.1 - User Story Closure.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\CLN15.1 - User Story Closure_Result.csv")]
        public virtual void WorkWithString_CLN15_1_UserStoryClosure()
        {
#line 13
this.WorkWithString("CLN15.1 - User Story Closure", "System.OutOfMemoryException", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\CLN15.1 - User Story Closure.csv", "C:\\_TestProject\\Data\\CLN15.1 - User Story Closure_Result.csv", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with String: NumberOfFeatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "NumberOfFeatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "NumberOfFeatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", ".feature(")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String2", "Automation engine is unable to playback the test because it is not able to intera" +
            "ct with the desktop")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:FilePath", "C:\\_TestProject\\Data\\DataNew.csv")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:WriteFilePath", "C:\\_TestProject\\Data\\DataNew_Result.csv")]
        public virtual void WorkWithString_NumberOfFeatures()
        {
#line 13
this.WorkWithString("NumberOfFeatures", ".feature(", "Automation engine is unable to playback the test because it is not able to intera" +
                    "ct with the desktop", "C:\\_TestProject\\Data\\DataNew.csv", "C:\\_TestProject\\Data\\DataNew_Result.csv", ((string[])(null)));
#line hidden
        }
        
        public virtual void WorkWithStrings(string iD, string string1, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ID", iD);
            argumentsOfScenario.Add("String1", string1);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Work with Strings", null, tagsOfScenario, argumentsOfScenario);
#line 39
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 40
 testRunner.When(string.Format("I pharse \"{0}\" string", string1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Work with Strings: Pharsing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "WorkWithStringAndFiles")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Pharsing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:ID", "Pharsing")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:String1", "This patient is unavailable for transfer at this time. For information or to requ" +
            "est the patient\'s release, contact the managing clinic: {ClinicName for key 0} -" +
            " 555555555")]
        public virtual void WorkWithStrings_Pharsing()
        {
#line 39
this.WorkWithStrings("Pharsing", "This patient is unavailable for transfer at this time. For information or to requ" +
                    "est the patient\'s release, contact the managing clinic: {ClinicName for key 0} -" +
                    " 555555555", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
